{"ast":null,"code":"import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nexport const useAuthStore = create()(persist(set => ({\n  user: null,\n  login: (username, token, role) => set({\n    user: {\n      username,\n      token,\n      role\n    }\n  }),\n  logout: () => set({\n    user: null\n  })\n}), {\n  name: 'auth-storage' // Ключ для localStorage\n}));","map":{"version":3,"names":["create","persist","useAuthStore","set","user","login","username","token","role","logout","name"],"sources":["C:/Users/Полина/Desktop/work/minofagriculture/my-app/src/stores/authStore.ts"],"sourcesContent":["import { create } from \"zustand\";\r\nimport { persist } from \"zustand/middleware\";\r\n\r\ninterface AuthState {\r\n  user: {\r\n    username: string;\r\n    role: 'admin' | 'lector' | 'student';\r\n    token: string;\r\n  } | null;\r\n  login: (username: string, token: string, role: 'admin' | 'lector' | 'student') => void;\r\n  logout: () => void;\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>()(\r\n  persist(\r\n    (set) => ({\r\n      user: null,\r\n      login: (username, token, role) => set({\r\n        user: { username, token, role }\r\n      }),\r\n      logout: () => set({ user: null }),\r\n    }),\r\n    {\r\n      name: 'auth-storage', // Ключ для localStorage\r\n    }\r\n  )\r\n);"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,OAAO,QAAQ,oBAAoB;AAY5C,OAAO,MAAMC,YAAY,GAAGF,MAAM,CAAY,CAAC,CAC7CC,OAAO,CACJE,GAAG,KAAM;EACRC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,KAAKL,GAAG,CAAC;IACpCC,IAAI,EAAE;MAAEE,QAAQ;MAAEC,KAAK;MAAEC;IAAK;EAChC,CAAC,CAAC;EACFC,MAAM,EAAEA,CAAA,KAAMN,GAAG,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC;AAClC,CAAC,CAAC,EACF;EACEM,IAAI,EAAE,cAAc,CAAE;AACxB,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}