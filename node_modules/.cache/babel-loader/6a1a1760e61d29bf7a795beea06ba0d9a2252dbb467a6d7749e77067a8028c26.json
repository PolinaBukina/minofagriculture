{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u0438\\u043D\\u0430\\\\Desktop\\\\work\\\\minofagriculture\\\\my-app\\\\src\\\\pages\\\\LoginPage\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './styles.module.css';\nimport { useAuthStore } from '../../stores/authStore';\n\n// Типы для API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Схема валидации с Zod\nconst schema = z.object({\n  username: z.string().min(1, 'Обязательное поле'),\n  password: z.string().min(6, 'Пароль должен быть не менее 6 символов'),\n  rememberMe: z.boolean().optional()\n});\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuthStore();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    },\n    setError\n  } = useForm({\n    resolver: zodResolver(schema)\n  });\n  const onSubmit = async data => {\n    try {\n      const response = await fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: data.username,\n          password: data.password\n        })\n      });\n      const result = await response.json();\n      if (!response.ok || 'error' in result) {\n        throw new Error('error' in result ? result.error : 'Ошибка авторизации');\n      }\n      const allowedRoles = ['admin', 'lector', 'student'];\n      if (!allowedRoles.includes(result.role)) {\n        throw new Error('Недостаточно прав для входа');\n      }\n\n      // Сохраняем токен в localStorage если rememberMe\n      if (data.rememberMe) {\n        localStorage.setItem('authToken', result.token);\n      }\n      login(result.username, result.token, result.role);\n      navigate('/dashboard');\n    } catch (err) {\n      setError('root', {\n        type: 'manual',\n        message: err instanceof Error ? err.message : 'Неизвестная ошибка'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.left\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.right,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: styles.formContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"N7VOCihrFJ1hZx72hqmSVA1YOro=\", false, function () {\n  return [useNavigate, useAuthStore, useForm];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useForm","zodResolver","z","useNavigate","styles","useAuthStore","jsxDEV","_jsxDEV","schema","object","username","string","min","password","rememberMe","boolean","optional","LoginPage","_s","navigate","login","register","handleSubmit","formState","errors","isSubmitting","setError","resolver","onSubmit","data","response","fetch","method","headers","body","JSON","stringify","result","json","ok","Error","error","allowedRoles","includes","role","localStorage","setItem","token","err","type","message","className","page","children","left","fileName","_jsxFileName","lineNumber","columnNumber","right","formContainer","_c","$RefreshReg$"],"sources":["C:/Users/Полина/Desktop/work/minofagriculture/my-app/src/pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\nimport { useAuthStore } from '../../stores/authStore';\r\n\r\n// Типы для API\r\ntype AuthResponse = {\r\n    token: string;\r\n    role: 'admin' | 'lector' | 'student';\r\n    username: string;\r\n};\r\n\r\ntype ApiError = {\r\n    error: string;\r\n};\r\n\r\n// Схема валидации с Zod\r\nconst schema = z.object({\r\n    username: z.string().min(1, 'Обязательное поле'),\r\n    password: z.string().min(6, 'Пароль должен быть не менее 6 символов'),\r\n    rememberMe: z.boolean().optional(),\r\n});\r\n\r\ntype FormData = z.infer<typeof schema>;\r\n\r\nconst LoginPage = () => {\r\n    const navigate = useNavigate();\r\n    const { login } = useAuthStore();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting },\r\n        setError,\r\n    } = useForm<FormData>({\r\n        resolver: zodResolver(schema),\r\n    });\r\n\r\n    const onSubmit = async (data: FormData) => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/auth/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    username: data.username,\r\n                    password: data.password,\r\n                }),\r\n            });\r\n\r\n            const result = await response.json() as AuthResponse | ApiError;\r\n\r\n            if (!response.ok || 'error' in result) {\r\n                throw new Error('error' in result ? result.error : 'Ошибка авторизации');\r\n            }\r\n\r\n            const allowedRoles: Array<AuthResponse['role']> = ['admin', 'lector', 'student'];\r\n            if (!allowedRoles.includes(result.role)) {\r\n                throw new Error('Недостаточно прав для входа');\r\n            }\r\n\r\n            // Сохраняем токен в localStorage если rememberMe\r\n            if (data.rememberMe) {\r\n                localStorage.setItem('authToken', result.token);\r\n            }\r\n\r\n            login(result.username, result.token, result.role);\r\n            navigate('/dashboard');\r\n\r\n        } catch (err) {\r\n            setError('root', {\r\n                type: 'manual',\r\n                message: err instanceof Error ? err.message : 'Неизвестная ошибка',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.page}>\r\n            <div className={styles.left}>\r\n                {/* Логотип (ваш SVG) */}\r\n            </div>\r\n\r\n            <div className={styles.right}>\r\n                <form onSubmit={handleSubmit(onSubmit)} className={styles.formContainer}>\r\n                    {/* Остальная часть формы без изменений */}\r\n                    {/* ... */}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}